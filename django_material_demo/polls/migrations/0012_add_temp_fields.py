# Generated by Django 4.1 on 2022-09-22 11:17

from django.core.files.storage import get_storage_class
from django.db import migrations, models


STORAGE = get_storage_class()()
# Should match with same variable in migration 0014
DUMMY_FILE_NAME = 'DUMMY_FILE_NAME'


def copy_file_fk(apps, schema_editor):
    question_model = apps.get_model('polls', 'Question')
    attachment_model = apps.get_model('polls', 'Attachment')
    for question in question_model.objects.all():
        if question.thumbnail:
            question.thumbnail_copy = question.thumbnail
            question.save()
    for attachment in attachment_model.objects.all():
        attachment.file_copy = attachment.file
        attachment.save()
    pass


def delete_dummy_file(name):
    STORAGE.delete(name)


def restore_file_fk(apps, schema_editor):
    file_model = apps.get_model('polls', 'File')
    question_model = apps.get_model('polls', 'Question')
    attachment_model = apps.get_model('polls', 'Attachment')

    for question in question_model.objects.all():
        delete_dummy_file(str(question.thumbnail_copy.pk))
        if question.thumbnail_copy.file_name == DUMMY_FILE_NAME:
            question.thumbnail = None
            question.thumbnail_copy = None
        else:
            question.thumbnail = question.thumbnail_copy
        question.save()
    for attachment in attachment_model.objects.all():
        delete_dummy_file(str(attachment.file_copy.pk))
        attachment.file = attachment.file_copy
        attachment.save()


class Migration(migrations.Migration):

    dependencies = [
        ('polls', '0011_alter_attachment_options_alter_choice_options_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='attachment',
            name='file_copy',
            field=models.ForeignKey(
                'polls.file', on_delete=models.DO_NOTHING, null=True, blank=True),
        ),
        migrations.AddField(
            model_name='question',
            name='thumbnail_copy',
            field=models.ForeignKey(
                'polls.file', on_delete=models.DO_NOTHING, null=True, blank=True),
        ),
        migrations.RunPython(copy_file_fk, restore_file_fk),
    ]
